//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SWA
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IST421JoeTeam4Entities : DbContext
    {
        public IST421JoeTeam4Entities()
            : base("name=IST421JoeTeam4Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Ingredient> Ingredients { get; set; }
        public virtual DbSet<Nutrition> Nutritions { get; set; }
        public virtual DbSet<OrderHistory> OrderHistories { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Product_Ingredients> Product_Ingredients { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tblReg> tblRegs { get; set; }
        public virtual DbSet<tblSignUp> tblSignUps { get; set; }
        public virtual DbSet<tblStudent_Info> tblStudent_Info { get; set; }
        public virtual DbSet<tblStudentCody> tblStudentCodies { get; set; }
        public virtual DbSet<tblStudentFalbo> tblStudentFalboes { get; set; }
        public virtual DbSet<tblStudentQureshi> tblStudentQureshis { get; set; }
        public virtual DbSet<tblStudentScott> tblStudentScotts { get; set; }
        public virtual DbSet<tblStudentTran> tblStudentTrans { get; set; }
        public virtual DbSet<tblStudentWilkinson> tblStudentWilkinsons { get; set; }
        public virtual DbSet<User_Passwords> User_Passwords { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int AddStudentInfo(string first_name, string last_name, string middle_name, Nullable<System.DateTime> dob, Nullable<bool> gender, string ssn, string address, string city, string state, string zip_code, string home_phone, string grade_entrng, Nullable<int> stdnt_seq)
        {
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var middle_nameParameter = middle_name != null ?
                new ObjectParameter("middle_name", middle_name) :
                new ObjectParameter("middle_name", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(bool));
    
            var ssnParameter = ssn != null ?
                new ObjectParameter("ssn", ssn) :
                new ObjectParameter("ssn", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zip_codeParameter = zip_code != null ?
                new ObjectParameter("zip_code", zip_code) :
                new ObjectParameter("zip_code", typeof(string));
    
            var home_phoneParameter = home_phone != null ?
                new ObjectParameter("home_phone", home_phone) :
                new ObjectParameter("home_phone", typeof(string));
    
            var grade_entrngParameter = grade_entrng != null ?
                new ObjectParameter("grade_entrng", grade_entrng) :
                new ObjectParameter("grade_entrng", typeof(string));
    
            var stdnt_seqParameter = stdnt_seq.HasValue ?
                new ObjectParameter("stdnt_seq", stdnt_seq) :
                new ObjectParameter("stdnt_seq", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddStudentInfo", first_nameParameter, last_nameParameter, middle_nameParameter, dobParameter, genderParameter, ssnParameter, addressParameter, cityParameter, stateParameter, zip_codeParameter, home_phoneParameter, grade_entrngParameter, stdnt_seqParameter);
        }
    
        public virtual int DeleteCody(Nullable<int> fldStudentID)
        {
            var fldStudentIDParameter = fldStudentID.HasValue ?
                new ObjectParameter("fldStudentID", fldStudentID) :
                new ObjectParameter("fldStudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCody", fldStudentIDParameter);
        }
    
        public virtual int DeleteFalbo(Nullable<int> fldStudentID)
        {
            var fldStudentIDParameter = fldStudentID.HasValue ?
                new ObjectParameter("fldStudentID", fldStudentID) :
                new ObjectParameter("fldStudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFalbo", fldStudentIDParameter);
        }
    
        public virtual int DeleteQureshi(Nullable<int> fldStudentID)
        {
            var fldStudentIDParameter = fldStudentID.HasValue ?
                new ObjectParameter("fldStudentID", fldStudentID) :
                new ObjectParameter("fldStudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteQureshi", fldStudentIDParameter);
        }
    
        public virtual int DeleteWilk(Nullable<int> fldStudentID)
        {
            var fldStudentIDParameter = fldStudentID.HasValue ?
                new ObjectParameter("fldStudentID", fldStudentID) :
                new ObjectParameter("fldStudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteWilk", fldStudentIDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int sprCreateStudentByStudentIDCody(string fldStudentName, string fldStudentSSN, string fldStudentEmail, string fldStudentPhone)
        {
            var fldStudentNameParameter = fldStudentName != null ?
                new ObjectParameter("fldStudentName", fldStudentName) :
                new ObjectParameter("fldStudentName", typeof(string));
    
            var fldStudentSSNParameter = fldStudentSSN != null ?
                new ObjectParameter("fldStudentSSN", fldStudentSSN) :
                new ObjectParameter("fldStudentSSN", typeof(string));
    
            var fldStudentEmailParameter = fldStudentEmail != null ?
                new ObjectParameter("fldStudentEmail", fldStudentEmail) :
                new ObjectParameter("fldStudentEmail", typeof(string));
    
            var fldStudentPhoneParameter = fldStudentPhone != null ?
                new ObjectParameter("fldStudentPhone", fldStudentPhone) :
                new ObjectParameter("fldStudentPhone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprCreateStudentByStudentIDCody", fldStudentNameParameter, fldStudentSSNParameter, fldStudentEmailParameter, fldStudentPhoneParameter);
        }
    
        public virtual int sprCreateStudentByStudentIDFalbo(string fldStudentName, string fldStudentSSN, string fldStudentEmail, string fldStudentPhone)
        {
            var fldStudentNameParameter = fldStudentName != null ?
                new ObjectParameter("fldStudentName", fldStudentName) :
                new ObjectParameter("fldStudentName", typeof(string));
    
            var fldStudentSSNParameter = fldStudentSSN != null ?
                new ObjectParameter("fldStudentSSN", fldStudentSSN) :
                new ObjectParameter("fldStudentSSN", typeof(string));
    
            var fldStudentEmailParameter = fldStudentEmail != null ?
                new ObjectParameter("fldStudentEmail", fldStudentEmail) :
                new ObjectParameter("fldStudentEmail", typeof(string));
    
            var fldStudentPhoneParameter = fldStudentPhone != null ?
                new ObjectParameter("fldStudentPhone", fldStudentPhone) :
                new ObjectParameter("fldStudentPhone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprCreateStudentByStudentIDFalbo", fldStudentNameParameter, fldStudentSSNParameter, fldStudentEmailParameter, fldStudentPhoneParameter);
        }
    
        public virtual int sprCreateStudentByStudentIDQureshi(string fldStudentName, string fldStudentSSN, string fldStudentEmail, string fldStudentPhone)
        {
            var fldStudentNameParameter = fldStudentName != null ?
                new ObjectParameter("fldStudentName", fldStudentName) :
                new ObjectParameter("fldStudentName", typeof(string));
    
            var fldStudentSSNParameter = fldStudentSSN != null ?
                new ObjectParameter("fldStudentSSN", fldStudentSSN) :
                new ObjectParameter("fldStudentSSN", typeof(string));
    
            var fldStudentEmailParameter = fldStudentEmail != null ?
                new ObjectParameter("fldStudentEmail", fldStudentEmail) :
                new ObjectParameter("fldStudentEmail", typeof(string));
    
            var fldStudentPhoneParameter = fldStudentPhone != null ?
                new ObjectParameter("fldStudentPhone", fldStudentPhone) :
                new ObjectParameter("fldStudentPhone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprCreateStudentByStudentIDQureshi", fldStudentNameParameter, fldStudentSSNParameter, fldStudentEmailParameter, fldStudentPhoneParameter);
        }
    
        public virtual int sprCreateStudentByStudentIDScott(string fldStudentName, string fldStudentSSN, string fldStudentEmail, string fldStudentPhone)
        {
            var fldStudentNameParameter = fldStudentName != null ?
                new ObjectParameter("fldStudentName", fldStudentName) :
                new ObjectParameter("fldStudentName", typeof(string));
    
            var fldStudentSSNParameter = fldStudentSSN != null ?
                new ObjectParameter("fldStudentSSN", fldStudentSSN) :
                new ObjectParameter("fldStudentSSN", typeof(string));
    
            var fldStudentEmailParameter = fldStudentEmail != null ?
                new ObjectParameter("fldStudentEmail", fldStudentEmail) :
                new ObjectParameter("fldStudentEmail", typeof(string));
    
            var fldStudentPhoneParameter = fldStudentPhone != null ?
                new ObjectParameter("fldStudentPhone", fldStudentPhone) :
                new ObjectParameter("fldStudentPhone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprCreateStudentByStudentIDScott", fldStudentNameParameter, fldStudentSSNParameter, fldStudentEmailParameter, fldStudentPhoneParameter);
        }
    
        public virtual int sprCreateStudentByStudentIDWilk(string fldStudentName, string fldStudentSSN, string fldStudentEmail, string fldStudentPhone)
        {
            var fldStudentNameParameter = fldStudentName != null ?
                new ObjectParameter("fldStudentName", fldStudentName) :
                new ObjectParameter("fldStudentName", typeof(string));
    
            var fldStudentSSNParameter = fldStudentSSN != null ?
                new ObjectParameter("fldStudentSSN", fldStudentSSN) :
                new ObjectParameter("fldStudentSSN", typeof(string));
    
            var fldStudentEmailParameter = fldStudentEmail != null ?
                new ObjectParameter("fldStudentEmail", fldStudentEmail) :
                new ObjectParameter("fldStudentEmail", typeof(string));
    
            var fldStudentPhoneParameter = fldStudentPhone != null ?
                new ObjectParameter("fldStudentPhone", fldStudentPhone) :
                new ObjectParameter("fldStudentPhone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprCreateStudentByStudentIDWilk", fldStudentNameParameter, fldStudentSSNParameter, fldStudentEmailParameter, fldStudentPhoneParameter);
        }
    
        public virtual int sprDeletetudentByStudentIDScott(Nullable<int> fldStudentID)
        {
            var fldStudentIDParameter = fldStudentID.HasValue ?
                new ObjectParameter("fldStudentID", fldStudentID) :
                new ObjectParameter("fldStudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprDeletetudentByStudentIDScott", fldStudentIDParameter);
        }
    
        public virtual ObjectResult<sprGetStudentByStudentID_Result> sprGetStudentByStudentID(Nullable<int> fldStudentID)
        {
            var fldStudentIDParameter = fldStudentID.HasValue ?
                new ObjectParameter("fldStudentID", fldStudentID) :
                new ObjectParameter("fldStudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprGetStudentByStudentID_Result>("sprGetStudentByStudentID", fldStudentIDParameter);
        }
    
        public virtual ObjectResult<sprGetStudentByStudentIDCody_Result> sprGetStudentByStudentIDCody(Nullable<int> fldStudentID)
        {
            var fldStudentIDParameter = fldStudentID.HasValue ?
                new ObjectParameter("fldStudentID", fldStudentID) :
                new ObjectParameter("fldStudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprGetStudentByStudentIDCody_Result>("sprGetStudentByStudentIDCody", fldStudentIDParameter);
        }
    
        public virtual ObjectResult<sprGetStudentByStudentIDFalbo_Result> sprGetStudentByStudentIDFalbo(Nullable<int> fldStudentID)
        {
            var fldStudentIDParameter = fldStudentID.HasValue ?
                new ObjectParameter("fldStudentID", fldStudentID) :
                new ObjectParameter("fldStudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprGetStudentByStudentIDFalbo_Result>("sprGetStudentByStudentIDFalbo", fldStudentIDParameter);
        }
    
        public virtual ObjectResult<sprGetStudentByStudentIDQureshi_Result> sprGetStudentByStudentIDQureshi(Nullable<int> fldStudentID)
        {
            var fldStudentIDParameter = fldStudentID.HasValue ?
                new ObjectParameter("fldStudentID", fldStudentID) :
                new ObjectParameter("fldStudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprGetStudentByStudentIDQureshi_Result>("sprGetStudentByStudentIDQureshi", fldStudentIDParameter);
        }
    
        public virtual ObjectResult<sprGetStudentByStudentIDScott_Result> sprGetStudentByStudentIDScott(Nullable<int> fldStudentID)
        {
            var fldStudentIDParameter = fldStudentID.HasValue ?
                new ObjectParameter("fldStudentID", fldStudentID) :
                new ObjectParameter("fldStudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprGetStudentByStudentIDScott_Result>("sprGetStudentByStudentIDScott", fldStudentIDParameter);
        }
    
        public virtual ObjectResult<sprGetStudentByStudentIDTran_Result> sprGetStudentByStudentIDTran(Nullable<int> fldStudentTranID)
        {
            var fldStudentTranIDParameter = fldStudentTranID.HasValue ?
                new ObjectParameter("fldStudentTranID", fldStudentTranID) :
                new ObjectParameter("fldStudentTranID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprGetStudentByStudentIDTran_Result>("sprGetStudentByStudentIDTran", fldStudentTranIDParameter);
        }
    
        public virtual ObjectResult<sprGetStudentByStudentIDWilk_Result> sprGetStudentByStudentIDWilk(Nullable<int> fldStudentID)
        {
            var fldStudentIDParameter = fldStudentID.HasValue ?
                new ObjectParameter("fldStudentID", fldStudentID) :
                new ObjectParameter("fldStudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sprGetStudentByStudentIDWilk_Result>("sprGetStudentByStudentIDWilk", fldStudentIDParameter);
        }
    
        public virtual int sprUpdateStudentByStudentIDScott(Nullable<int> fldStudentID, string fldStudentName, string fldStudentSSN, string fldStudentEmail, string fldStudentPhone)
        {
            var fldStudentIDParameter = fldStudentID.HasValue ?
                new ObjectParameter("fldStudentID", fldStudentID) :
                new ObjectParameter("fldStudentID", typeof(int));
    
            var fldStudentNameParameter = fldStudentName != null ?
                new ObjectParameter("fldStudentName", fldStudentName) :
                new ObjectParameter("fldStudentName", typeof(string));
    
            var fldStudentSSNParameter = fldStudentSSN != null ?
                new ObjectParameter("fldStudentSSN", fldStudentSSN) :
                new ObjectParameter("fldStudentSSN", typeof(string));
    
            var fldStudentEmailParameter = fldStudentEmail != null ?
                new ObjectParameter("fldStudentEmail", fldStudentEmail) :
                new ObjectParameter("fldStudentEmail", typeof(string));
    
            var fldStudentPhoneParameter = fldStudentPhone != null ?
                new ObjectParameter("fldStudentPhone", fldStudentPhone) :
                new ObjectParameter("fldStudentPhone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sprUpdateStudentByStudentIDScott", fldStudentIDParameter, fldStudentNameParameter, fldStudentSSNParameter, fldStudentEmailParameter, fldStudentPhoneParameter);
        }
    
        public virtual int UpdateTableCody(string fldStudentName, string fldStudentSSN, string fldStudentEmail, string fldStudentPhone, Nullable<int> fldStudentID)
        {
            var fldStudentNameParameter = fldStudentName != null ?
                new ObjectParameter("fldStudentName", fldStudentName) :
                new ObjectParameter("fldStudentName", typeof(string));
    
            var fldStudentSSNParameter = fldStudentSSN != null ?
                new ObjectParameter("fldStudentSSN", fldStudentSSN) :
                new ObjectParameter("fldStudentSSN", typeof(string));
    
            var fldStudentEmailParameter = fldStudentEmail != null ?
                new ObjectParameter("fldStudentEmail", fldStudentEmail) :
                new ObjectParameter("fldStudentEmail", typeof(string));
    
            var fldStudentPhoneParameter = fldStudentPhone != null ?
                new ObjectParameter("fldStudentPhone", fldStudentPhone) :
                new ObjectParameter("fldStudentPhone", typeof(string));
    
            var fldStudentIDParameter = fldStudentID.HasValue ?
                new ObjectParameter("fldStudentID", fldStudentID) :
                new ObjectParameter("fldStudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTableCody", fldStudentNameParameter, fldStudentSSNParameter, fldStudentEmailParameter, fldStudentPhoneParameter, fldStudentIDParameter);
        }
    
        public virtual int UpdateTableFalbo(string fldStudentName, string fldStudentSSN, string fldStudentEmail, string fldStudentPhone, Nullable<int> fldStudentID)
        {
            var fldStudentNameParameter = fldStudentName != null ?
                new ObjectParameter("fldStudentName", fldStudentName) :
                new ObjectParameter("fldStudentName", typeof(string));
    
            var fldStudentSSNParameter = fldStudentSSN != null ?
                new ObjectParameter("fldStudentSSN", fldStudentSSN) :
                new ObjectParameter("fldStudentSSN", typeof(string));
    
            var fldStudentEmailParameter = fldStudentEmail != null ?
                new ObjectParameter("fldStudentEmail", fldStudentEmail) :
                new ObjectParameter("fldStudentEmail", typeof(string));
    
            var fldStudentPhoneParameter = fldStudentPhone != null ?
                new ObjectParameter("fldStudentPhone", fldStudentPhone) :
                new ObjectParameter("fldStudentPhone", typeof(string));
    
            var fldStudentIDParameter = fldStudentID.HasValue ?
                new ObjectParameter("fldStudentID", fldStudentID) :
                new ObjectParameter("fldStudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTableFalbo", fldStudentNameParameter, fldStudentSSNParameter, fldStudentEmailParameter, fldStudentPhoneParameter, fldStudentIDParameter);
        }
    
        public virtual int UpdateTableQureshi(string fldStudentName, string fldStudentSSN, string fldStudentEmail, string fldStudentPhone, Nullable<int> fldStudentID)
        {
            var fldStudentNameParameter = fldStudentName != null ?
                new ObjectParameter("fldStudentName", fldStudentName) :
                new ObjectParameter("fldStudentName", typeof(string));
    
            var fldStudentSSNParameter = fldStudentSSN != null ?
                new ObjectParameter("fldStudentSSN", fldStudentSSN) :
                new ObjectParameter("fldStudentSSN", typeof(string));
    
            var fldStudentEmailParameter = fldStudentEmail != null ?
                new ObjectParameter("fldStudentEmail", fldStudentEmail) :
                new ObjectParameter("fldStudentEmail", typeof(string));
    
            var fldStudentPhoneParameter = fldStudentPhone != null ?
                new ObjectParameter("fldStudentPhone", fldStudentPhone) :
                new ObjectParameter("fldStudentPhone", typeof(string));
    
            var fldStudentIDParameter = fldStudentID.HasValue ?
                new ObjectParameter("fldStudentID", fldStudentID) :
                new ObjectParameter("fldStudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTableQureshi", fldStudentNameParameter, fldStudentSSNParameter, fldStudentEmailParameter, fldStudentPhoneParameter, fldStudentIDParameter);
        }
    
        public virtual int UpdateTableWilk(string fldStudentName, string fldStudentSSN, string fldStudentEmail, string fldStudentPhone, Nullable<int> fldStudentID)
        {
            var fldStudentNameParameter = fldStudentName != null ?
                new ObjectParameter("fldStudentName", fldStudentName) :
                new ObjectParameter("fldStudentName", typeof(string));
    
            var fldStudentSSNParameter = fldStudentSSN != null ?
                new ObjectParameter("fldStudentSSN", fldStudentSSN) :
                new ObjectParameter("fldStudentSSN", typeof(string));
    
            var fldStudentEmailParameter = fldStudentEmail != null ?
                new ObjectParameter("fldStudentEmail", fldStudentEmail) :
                new ObjectParameter("fldStudentEmail", typeof(string));
    
            var fldStudentPhoneParameter = fldStudentPhone != null ?
                new ObjectParameter("fldStudentPhone", fldStudentPhone) :
                new ObjectParameter("fldStudentPhone", typeof(string));
    
            var fldStudentIDParameter = fldStudentID.HasValue ?
                new ObjectParameter("fldStudentID", fldStudentID) :
                new ObjectParameter("fldStudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTableWilk", fldStudentNameParameter, fldStudentSSNParameter, fldStudentEmailParameter, fldStudentPhoneParameter, fldStudentIDParameter);
        }
    }
}
